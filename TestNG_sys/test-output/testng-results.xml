<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="14" passed="11" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-10-03T13:26:55 IST" name="Suite" finished-at="2024-10-03T13:26:55 IST" duration-ms="137">
    <groups>
    </groups>
    <test started-at="2024-10-03T13:26:55 IST" name="Test" finished-at="2024-10-03T13:26:55 IST" duration-ms="137">
      <class name="annotations.Annot">
        <test-method is-config="true" signature="bclass()[pri:0, instance:annotations.Annot@3ee37e5a]" started-at="2024-10-03T13:26:55 IST" name="bclass" finished-at="2024-10-03T13:26:55 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bclass -->
        <test-method is-config="true" signature="bmethod()[pri:0, instance:annotations.Annot@3ee37e5a]" started-at="2024-10-03T13:26:55 IST" name="bmethod" finished-at="2024-10-03T13:26:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmethod -->
        <test-method signature="testCase1()[pri:0, instance:annotations.Annot@3ee37e5a]" started-at="2024-10-03T13:26:55 IST" name="testCase1" finished-at="2024-10-03T13:26:55 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method is-config="true" signature="amethod()[pri:0, instance:annotations.Annot@3ee37e5a]" started-at="2024-10-03T13:26:55 IST" name="amethod" finished-at="2024-10-03T13:26:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amethod -->
        <test-method is-config="true" signature="bmethod()[pri:0, instance:annotations.Annot@3ee37e5a]" started-at="2024-10-03T13:26:55 IST" name="bmethod" finished-at="2024-10-03T13:26:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmethod -->
        <test-method signature="testCase2()[pri:0, instance:annotations.Annot@3ee37e5a]" started-at="2024-10-03T13:26:55 IST" name="testCase2" finished-at="2024-10-03T13:26:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase2 -->
        <test-method is-config="true" signature="amethod()[pri:0, instance:annotations.Annot@3ee37e5a]" started-at="2024-10-03T13:26:55 IST" name="amethod" finished-at="2024-10-03T13:26:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amethod -->
        <test-method is-config="true" signature="bmethod()[pri:0, instance:annotations.Annot@3ee37e5a]" started-at="2024-10-03T13:26:55 IST" name="bmethod" finished-at="2024-10-03T13:26:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmethod -->
        <test-method signature="testCase3()[pri:0, instance:annotations.Annot@3ee37e5a]" started-at="2024-10-03T13:26:55 IST" name="testCase3" finished-at="2024-10-03T13:26:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase3 -->
        <test-method is-config="true" signature="aclass()[pri:0, instance:annotations.Annot@3ee37e5a]" started-at="2024-10-03T13:26:55 IST" name="aclass" finished-at="2024-10-03T13:26:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aclass -->
        <test-method is-config="true" signature="amethod()[pri:0, instance:annotations.Annot@3ee37e5a]" started-at="2024-10-03T13:26:55 IST" name="amethod" finished-at="2024-10-03T13:26:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amethod -->
      </class> <!-- annotations.Annot -->
      <class name="annotations.Order2">
        <test-method signature="login()[pri:1, instance:annotations.Order2@194bcebf]" started-at="2024-10-03T13:26:55 IST" name="login" finished-at="2024-10-03T13:26:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="Deletemail()[pri:3, instance:annotations.Order2@194bcebf]" started-at="2024-10-03T13:26:55 IST" name="Deletemail" finished-at="2024-10-03T13:26:55 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Deletemail -->
      </class> <!-- annotations.Order2 -->
      <class name="annotations.ParmWithArray">
        <test-method signature="testCase1(java.lang.String,java.lang.String)[pri:0, instance:annotations.ParmWithArray@73e22a3d]" started-at="2024-10-03T13:26:55 IST" name="testCase1" data-provider="getdata1" finished-at="2024-10-03T13:26:55 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pwd1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method signature="testCase1(java.lang.String,java.lang.String)[pri:0, instance:annotations.ParmWithArray@73e22a3d]" started-at="2024-10-03T13:26:55 IST" name="testCase1" data-provider="getdata1" finished-at="2024-10-03T13:26:55 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pwd2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method signature="testCase1(java.lang.String,java.lang.String)[pri:0, instance:annotations.ParmWithArray@73e22a3d]" started-at="2024-10-03T13:26:55 IST" name="testCase1" data-provider="getdata1" finished-at="2024-10-03T13:26:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pwd3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
      </class> <!-- annotations.ParmWithArray -->
      <class name="annotations.Order">
        <test-method signature="login()[pri:1, instance:annotations.Order@2ea41516]" started-at="2024-10-03T13:26:55 IST" name="login" finished-at="2024-10-03T13:26:55 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="composemail()[pri:2, instance:annotations.Order@2ea41516]" started-at="2024-10-03T13:26:55 IST" name="composemail" finished-at="2024-10-03T13:26:55 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- composemail -->
        <test-method signature="Deletemail()[pri:3, instance:annotations.Order@2ea41516]" started-at="2024-10-03T13:26:55 IST" name="Deletemail" finished-at="2024-10-03T13:26:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Deletemail -->
      </class> <!-- annotations.Order -->
      <class name="annotations.SoftassertEx">
        <test-method signature="sftAssert()[pri:0, instance:annotations.SoftassertEx@3c7f66c4]" started-at="2024-10-03T13:26:55 IST" name="sftAssert" finished-at="2024-10-03T13:26:55 IST" duration-ms="8" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
comparing number of links expected [10] but found [12],
comparing two string expected [Bengalooru] but found [Bangalore]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
comparing number of links expected [10] but found [12],
comparing two string expected [Bengalooru] but found [Bangalore]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at annotations.SoftassertEx.sftAssert(SoftassertEx.java:18)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sftAssert -->
      </class> <!-- annotations.SoftassertEx -->
      <class name="annotations.Hardassert">
        <test-method signature="hardAssert()[pri:0, instance:annotations.Hardassert@3a44431a]" started-at="2024-10-03T13:26:55 IST" name="hardAssert" finished-at="2024-10-03T13:26:55 IST" duration-ms="8" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [10] but found [12]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [10] but found [12]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at annotations.Hardassert.hardAssert(Hardassert.java:15)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hardAssert -->
      </class> <!-- annotations.Hardassert -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
